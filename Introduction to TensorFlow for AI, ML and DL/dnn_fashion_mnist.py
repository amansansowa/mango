# -*- coding: utf-8 -*-
"""DNN_fashion_mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YjTKg0Nootgn8mmNDE9Ek3KmNsDCLb2J
"""

import tensorflow as tf
from tensorflow import keras 
import matplotlib.pyplot as pp

#downloading dataset the variable "mnist"
mnist = tf.keras.datasets.fashion_mnist

(x_train,y_train),(x_test,y_test) = mnist.load_data()
x_train = x_train.reshape(60000,28,28,1)
x_train = x_train /255
x_test = x_test.reshape(10000,28,28,1)
x_test = x_test /255

model = tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(64, (3,3), activation = 'relu', input_shape = (28,28,1)),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation= 'relu'),
    tf.keras.layers.Dense(10, activation = 'softmax')
])

model.compile(optimizer = 'adam',
             loss = 'sparse_categorical_crossentropy',
             metrics = ['accuracy'])

class my_callback(tf.keras.callbacks.Callback):
  def on_epoch_end(self, epoch, logs={}):
    if (logs.get('acc')>0.935):
      print('\n \n Desired accuracy reached. Terminating training \n')
      self.model.stop_training = True

Callbacks = my_callback()
model.fit(x_train,y_train,epochs=20,callbacks=[Callbacks])

model.evaluate(x_test,y_test)

model.summary()

